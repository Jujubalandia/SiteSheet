[{"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/index.js":"1","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/App.js":"2","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/reportWebVitals.js":"3","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/home.js":"4","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/profile.js":"5","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/loading/loading.js":"6","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/api/api.js":"7","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/youtube/youtube.js":"8","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/random/random.js":"9","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/cafe/cafe.js":"10","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/Header/header.js":"11","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/themes/theme.js":"12","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/feature-list/feature.js":"13","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/contact/contact.js":"14","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/div-line/divLine.js":"15","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/landingPage/landingPage.js":"16","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/Intro/intro.js":"17","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/intro-feature/feature.js":"18","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/footer/footer.js":"19","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/feature-banner/banner.js":"20","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/webBuilder/webBulider.js":"21","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/webBuilder/data.js":"22","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/connect/connect.js":"23","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/me/me.js":"24","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/me/particle.js":"25"},{"size":675,"mtime":1611854118434,"results":"26","hashOfConfig":"27"},{"size":1459,"mtime":1612429394125,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1611598615840,"results":"29","hashOfConfig":"27"},{"size":335,"mtime":1612428766516,"results":"30","hashOfConfig":"27"},{"size":908,"mtime":1611725498087,"results":"31","hashOfConfig":"27"},{"size":439,"mtime":1612428633928,"results":"32","hashOfConfig":"27"},{"size":3357,"mtime":1612464703511,"results":"33","hashOfConfig":"27"},{"size":2361,"mtime":1612412725563,"results":"34","hashOfConfig":"27"},{"size":2014,"mtime":1611755233079,"results":"35","hashOfConfig":"27"},{"size":4671,"mtime":1612420215630,"results":"36","hashOfConfig":"27"},{"size":2471,"mtime":1611855550194,"results":"37","hashOfConfig":"27"},{"size":1145,"mtime":1612003708347,"results":"38","hashOfConfig":"27"},{"size":3403,"mtime":1612428595548,"results":"39","hashOfConfig":"27"},{"size":4594,"mtime":1611857295844,"results":"40","hashOfConfig":"27"},{"size":202,"mtime":1611857814871,"results":"41","hashOfConfig":"27"},{"size":833,"mtime":1612420236993,"results":"42","hashOfConfig":"27"},{"size":1759,"mtime":1612428460449,"results":"43","hashOfConfig":"27"},{"size":1561,"mtime":1611996282767,"results":"44","hashOfConfig":"27"},{"size":190,"mtime":1611998191344,"results":"45","hashOfConfig":"27"},{"size":314,"mtime":1612428514268,"results":"46","hashOfConfig":"27"},{"size":7511,"mtime":1612464094243,"results":"47","hashOfConfig":"27"},{"size":1702,"mtime":1612371578334,"results":"48","hashOfConfig":"27"},{"size":4238,"mtime":1612412838795,"results":"49","hashOfConfig":"27"},{"size":3380,"mtime":1612541856819,"results":"50","hashOfConfig":"27"},{"size":2865,"mtime":1612531670798,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1qu05x2",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/index.js",[],["115","116"],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/App.js",[],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/reportWebVitals.js",[],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/home.js",[],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/profile.js",["117","118"],"import React , {useState ,useEffect} from \"react\";\nimport Axios from 'axios';\nimport Loading from '../../comp/loading/loading';\n\nimport {\n    BrowserRouter as Router,\n  \n    useParams\n  } from \"react-router-dom\";\n\n\nexport  default function Profile(){\n    let { id } = useParams();\n    const [data,setData] = useState(null);\n\n    const fetchData = async () => {\n        try{\n            // console.log(id);\n         const {data} = await  Axios.get('https://spreadsheets.google.com/feeds/list/'+id +'/od6/public/basic?alt=json') ;\n         const details = data;\n         setData(details);\n        } catch(error){\n             console.warn(error);\n        }\n        \n      };\n      useEffect(()=>{\n        fetchData();\n      }, [] );\n \n    if(!data)\n    {\n        return(\n    <>\n  <Loading/>\n\n    </>\n\n          \n        );\n    }else{\n    return (\n      <div>\n        <h3>ID: </h3>\n      </div>\n    );\n    }\n};\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/loading/loading.js",[],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/api/api.js",["119","120","121"],"import React , {useState}from 'react';\nimport './api.css';\nimport { Button, TextField } from \"@material-ui/core\";\nimport { makeStyles, fade } from '@material-ui/core/styles';\n\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport ApiImage from './api.svg';\n\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n\nconst styles =  makeStyles((theme) => ({\n  palette: {\n    primary: '#47ff8c',\n    secondary: '#47ff8c' ,\n  },\n  textField: {\n      width: '75%',    \n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: '7%',\n      color: '#47ff8c',\n      backgroundColor: '#f0f0f0',\n      margiTop: '5%',    \n      paddingBottom: 0,\n      marginTop: 0,\n      fontWeight: 500,\n    \n  },\n  \n}) );\n\nfunction Api() {\n  const classes = styles();\n\n \n  var [url ,setUrl ] = useState(null);\n  var [apiUrl , setApiUrl] = useState(null);\n\n  const getUrl = (e)  => {\n    var data =  e.target.value;\n    setUrl(data);\n   \n  }\n\n  const checkUrl = () => {\n   if(url == null)\n   {\n    toast.warn('please enter url');\n\n   }else{\n\n    var yo = url.slice(0,39);\n\n    if(yo ==='https://docs.google.com/spreadsheets/d/')\n    {\n      toast('Api is ready');\n      console.log(yo);\n      var i = 40;\n      while(url[i] !== '/')\n      {\n        i++;\n      }\n      var uniqueID = url.slice(39,i);\n      console.log(uniqueID);\n      var temp = 'https://spreadsheets.google.com/feeds/list/' + uniqueID + '/od6/public/basic?alt=json ';\n      setApiUrl(temp);\n\n\n\n\n     }else{\n     toast.error('Please enter URL properly.');\n     }\n    }\n\n  }\n\n const   copyCodeToClipboard = () => {\n    \n  navigator.clipboard.writeText(apiUrl)\n    toast('Copied');\n\n  }\n\n\n  return (\n    <div className=\"api-back\">\n     <div className=\"api-details\">\n     <h1 className=\"api-heading\">Convert your Google sheet into a Api.</h1>\n     <div className=\"api-dis\">\n   { !apiUrl && <> <span className=\"api-dis-text\"> Make sure you have publised you google sheet to web ,then share your google sheet url.</span> \n   \n    \n     <TextField \n      label=\"Enter Url\"\n      variant=\"outlined\"\n      fullWidth\n      onChange={getUrl}\n      style={{\n        color: '#47ff8c',\n\n      }}\n      className={classes.textField}\n\n  \n\n     >\n       </TextField>\n     <Button \n     style={{            \n      backgroundColor: \"#787c7a\",\n      color:\"#47ff8c\",     \n      borderColor: \"#787c7a\",\n      textDecoration: false,\n      marginLeft: '1%',\n    \n       \n\n  }}\n     onClick={checkUrl} > <div className=\"api-button-text\">GO</div></Button>\n    </>\n  }  <div>\n     <ToastContainer />\n\n    </div>\n    { apiUrl &&<> \n      <span className=\"api-dis-text\"> This is your api end point copy it and use it in your web application.</span> \n    <TextField    \n      variant=\"outlined\"\n      fullWidth\n      defaultValue={apiUrl}\n      style={{\n        color: '#47ff8c',\n\n      }}\n      className={classes.textField}\n\n  \n\n     />\n    \n    <Button \n     style={{            \n      backgroundColor: \"#787c7a\",\n      color:\"#47ff8c\",     \n      borderColor: \"#787c7a\",\n      textDecoration: false,\n      marginLeft: '1%',\n    \n       \n\n  }}\n     onClick={copyCodeToClipboard} > <div className=\"api-button-text\"> <FileCopyIcon /> </div></Button>\n     </>}\n    </div>\n    </div>\n\n    <img src={ApiImage}  className=\"api-image\"/>\n    </div>\n  );\n}\n\nexport default Api;","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/youtube/youtube.js",["122","123","124","125"],"import React , {useState ,useEffect} from \"react\";\nimport Axios from 'axios';\nimport Loading from '../../../comp/loading/loading';\nimport ReactPlayer from 'react-player'\n\n\n\nimport './youtube.css';\nimport YoutubeImage from '../../../assets/youtube.png' ;\n\n\n\nimport {\n    BrowserRouter as Router,\n   \n    useParams\n  } from \"react-router-dom\";\n\n\nexport  default function Youtube(){\n     const clearLink = (link) => {\n        var j = 0;\n        while(link[j] !== 'h')\n        {\n            j++;\n        }\n        var temp = link.length;\n         var newLink = link.slice(j,temp);\n        // console.log(newLink);\n        return newLink;\n      \n    };\n    const clearText = (text) => {\n        var temp = text.length;\n       var newText = text.slice(6,temp);\n       return newText;\n    };\n    let { id } = useParams();\n    const [data,setData] = useState(null);\n    const [sheetData,setSheetData] = useState(null);\n\n    const fetchData = async () => {\n        try{\n            // console.log(id);\n         const {data} = await  Axios.get('https://spreadsheets.google.com/feeds/list/'+id +'/od6/public/basic?alt=json') ;\n         const details = data;\n         setData(details[\"feed\"].entry);\n                          \n        \n\n        } catch(error){\n             console.warn(error);\n        }\n        \n      };\n      useEffect(()=>{\n        fetchData();\n      }, [] );\n \n    if(!data)\n    {\n        return(\n    <>\n  <Loading color={'#0000'}/>\n\n    </>\n\n          \n        );\n    }else{\n        var len = data.length;\n        var mainData = data.slice(1,len);\n    return (\n      < >\n            <div className=\"main-grid\">\n\n      <div className=\"main-div\">\n        \n      <h1 className=\"main-text\">\n        {data[0].title[\"$t\"]}\n      </h1>\n      <h3 className=\"main-subText\">\n        {  clearText(data[0].content[\"$t\"])}\n      </h3>\n      <div className=\"image\">\n          <img src={YoutubeImage} className=\"main-image\" alt=\"Youtube\"></img>\n      </div>\n      </div>\n     <div className=\"video-Grid\">\n{\n    mainData.map(\n        x =>\n       \n        <div className=\"youtube-card\" key={x[\"content\"].$t}>\n    <ReactPlayer url={clearLink(x[\"content\"].$t)} controls={true} className=\"videoPlayer\" width=\"100%\"/>\n    <h3 className=\"videoTitle\"> {x[\"title\"].$t}</h3>\n\n  \n     </div>\n   \n        \n    )\n}\n        </div>\n        </div>\n     </>\n      \n\n    );\n    }\n};\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/random/random.js",["126","127","128"],"import React , {useState ,useEffect} from \"react\";\nimport Axios from 'axios';\nimport Loading from '../../../comp/loading/loading';\nimport useWindowSize from 'react-use/lib/useWindowSize'\nimport Confetti from 'react-confetti'\n\n\n\n\nimport './random.css';\nimport WinnerImage from '../../../assets/winner.png' ;\n\n\n\nimport {\n    BrowserRouter as Router,\n        useParams\n  } from \"react-router-dom\";\n\n\nexport  default function Random(){\n    const { width, height } = useWindowSize()\n\n    function getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n  \n    let { id } = useParams();\n    const [data,setData] = useState(null);\n\n    const fetchData = async () => {\n        try{\n            // console.log(id);\n         const {data} = await  Axios.get('https://spreadsheets.google.com/feeds/list/'+id +'/od6/public/basic?alt=json') ;\n         const details = data;\n         setData(details[\"feed\"].entry);\n                          \n        \n\n        } catch(error){\n             console.warn(error);\n        }\n        \n      };\n      useEffect(()=>{\n        fetchData();\n      }, [] );\n \n    if(!data)\n    {\n        return(\n    <>\n  <Loading color={'#0000'}/>\n\n    </>\n\n          \n        );\n    }else{\n        var len = data.length;\n        var ran =   getRandomInt(0,len) ;\n        var randomWinner = data[ran];   \n        const name= randomWinner['title'][\"$t\"]; \n        const email = randomWinner['content'][\"$t\"];\n        var len = email.length;\n        const mainMail = email.slice(7,len);\n\n      return (\n     <>\n     <Confetti\n      width={width}\n      height={height}\n    />\n              <img src={WinnerImage} className=\"main-image-hero\" alt=\"WinnerImage\"></img>\n\n    <div className=\"centered-this\">\n        <h3 className=\"talor\">The winner is 🏆 </h3> <br/>\n     <h1 className=\"talor text\">{name}</h1> <br/>\n      <span className=\"talor\">{mainMail}</span>\n    </div>\n     </>\n      \n\n    );\n    }\n};\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/cafe/cafe.js",["129","130","131"],"import React , {useState ,useEffect} from \"react\";\nimport Axios from 'axios';\nimport Loading from '../../../comp/loading/loading';\nimport  { Button }from '@material-ui/core';\nimport FacebookIcon from '@material-ui/icons/Facebook';\n\n\nimport './cafe.css';\nimport Coffe from '../../../assets/coffee.svg';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\nimport EmojiFoodBeverageIcon from '@material-ui/icons/EmojiFoodBeverage';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\n\nimport {\n    BrowserRouter as Router,   \n    useParams\n  } from \"react-router-dom\";\n\n\nexport  default function Cafe(){\n   \n    const clearText = (text) => {\n        var temp = text.length;\n       var newText = text.slice(8,temp);\n       return newText;\n    };\n    let { id } = useParams();\n    const [data,setData] = useState(null);\n\n    const fetchData = async () => {\n      try{\n          // console.log(id);\n       const {data} = await  Axios.get('https://spreadsheets.google.com/feeds/list/'+id +'/od6/public/basic?alt=json') ;\n       const details = data;\n       setData(details);\n                        \n       console.log(data);\n\n      } catch(error){\n           console.warn(error);\n      }\n      \n    };\n      useEffect(()=>{\n        fetchData();\n      }, [] );\n \n    if(!data)\n    {\n        return(\n    <>\n  <Loading color={'#0000'}/>\n\n    </>\n\n          \n        );\n    }else{\n     var cafeName = data[\"feed\"].entry[0][\"content\"]['$t'];\n     var cafeTagline = data[\"feed\"].entry[1][\"content\"]['$t'];\n     var cafeNumber = data[\"feed\"].entry[2][\"content\"][\"$t\"];\n     var newNumber = \"tel:\" + clearText(cafeNumber);\n     var cafeFacebook = data[\"feed\"].entry[3][\"content\"][\"$t\"];\n     var cafeTwitter = data[\"feed\"].entry[4][\"content\"][\"$t\"];\n     var cafeAddress = data[\"feed\"].entry[5][\"content\"][\"$t\"];\n     var header1 = data[\"feed\"].entry[6][\"content\"][\"$t\"];\n     var header2 = data[\"feed\"].entry[7][\"content\"][\"$t\"];\n     var header3 = data[\"feed\"].entry[8][\"content\"][\"$t\"];\n\n\n\n\n    return (\n      < >\n      <div>\n        </div>\n    \n     <div className=\"social-bar\">\n       <div className=\"bar-line\">\n       </div>\n      < a href={newNumber}>\n      <Button>\n       <PhoneIcon fontSize=\"large\" />\n     \n      </Button>\n      </a>\n      <a href={clearText(cafeFacebook)}>\n      <Button>\n          \n       <FacebookIcon fontSize=\"large\" />\n       \n      </Button>\n      </a>\n       \n      <a href={clearText(cafeTwitter)}>\n      <Button>\n       <TwitterIcon fontSize=\"large\" />\n     \n      </Button>\n      </a>\n      \n      </div>\n        \n      <div className=\"bottom\">\n          <div className=\"bar-line\"></div>\n      </div>\n      <div className=\"cafe-wrapper\">\n        <div>\n      <h1 className=\"cafe-name-text\"> {clearText(cafeName)} </h1> <br/>  \n       <h1 className=\"cafe-dis-text\">{clearText(cafeTagline)} </h1>\n     \n       </div>\n      <img className=\"hero-img\" src={Coffe}  width=\"60%\" height=\"100%\"/>\n      </div>\n        \n          <div className=\"bar-line\"></div>\n        <div className=\"cafe-card-Grid\">\n\n        <div className=\"cafe-card\">\n            <Button className=\"cafe-card-bg\">\n          <div className=\"cafe-details\">\n        <MotorcycleIcon fontSize=\"large\" className=\"card-icon\"  />\n        <h1 > {clearText(header1)}  </h1>\n\n          </div>\n          </Button>\n          </div>\n          <div className=\"cafe-card\">\n          <Button className=\"cafe-card-bg\">\n          <div className=\"cafe-details\">\n        <EmojiFoodBeverageIcon fontSize=\"large\" className=\"card-icon\"  />\n        <h1 > {clearText(header2)} </h1>\n\n          </div>\n          </Button>\n\n          </div>\n           <div className=\"cafe-card\">\n           <Button className=\"cafe-card-bg\">\n          <div className=\"cafe-details\">\n        <WatchLaterIcon fontSize=\"large\" className=\"card-icon\"  />\n        <h1 > {clearText(header3)}</h1>\n\n          </div>\n          </Button>\n\n\n          </div>\n        </div>\n        <div className=\"bar-line bar-gap\"></div>\n     \n        <div className=\"cafe-last-div\">\n          <br/>\n          <br/><br/>\n          <div className=\"cafe-last-text\">\n        < a href={newNumber}>\n      <Button>\n       <PhoneIcon fontSize=\"large\" />\n     \n      </Button>\n      </a>\n            \n            Order Now!!! </div>\n            \n              <LocationOnIcon/>  <br/>\n              \n              \n            <span className=\"cafe-h3\"> \n              {clearText(cafeAddress)}</span>\n              \n              \n\n         </div>\n      \n         </>\n    );\n    }\n};\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/Header/header.js",[],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/themes/theme.js",[],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/feature-list/feature.js",[],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/contact/contact.js",[],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/div-line/divLine.js",[],["132","133"],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/landingPage/landingPage.js",[],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/Intro/intro.js",["134","135"],"import React from 'react';\nimport { Button} from '@material-ui/core/'\nimport Exel from './exel.svg';\nimport  \"./intro.css\";\nimport Typewriter from 'typewriter-effect';\n\nimport {\n   \n    Link,\n    \n  } from \"react-router-dom\";\n\nfunction Intro({}) {\n\n  return (\n    <>\n   \n    <div className=\"intro-bg\" >\n    <div className=\"intro-blankSpace\">\n          \n\n         </div>\n        <img src={Exel} alt=\"intro-exel-image\" className=\"intro-exelImg\"></img>\n        \n\n        <div className=\"intro-Buttons\">\n        \n\n        </div>\n\n    <h3 className=\"intro-typeWrite\">\n        <Typewriter\n        options={{\n            strings: ['API', 'Website','Fun Game'],\n            autoStart: true,\n            loop: true,\n        }}\n        \n        /> \n        <Link to=\"/api\" >\n        <Button style={{\n            \n            borderRadius: 25,\n            backgroundColor: \"#47ff8c\",\n            color: \"#787c7a\",\n            textDecoration: false,\n            marginRight: 5,\n\n            \n    \n        }} ><h3 className=\"intro-button-text\">Convert into API</h3></Button> \n        </Link>\n        <Link to=\"/webbuilder/\">\n        <Button\n         style={{\n            \n            borderRadius: 25,\n            backgroundColor: \"#787c7a\",\n            color:\"#47ff8c\",\n            borderWidth: 5,\n            borderColor: \"#787c7a\",\n            textDecoration: false,\n            marginRight: 3,\n\n            \n    \n        }}\n        ><h3 className=\"intro-button-text\">Convert into Website</h3></Button> \n        </Link>\n        </h3>\n      \n        <h2 className=\"intro-h3\">\n           Convert Google Sheets into\n        </h2>\n       <h1 className=\"intro-h1\">\n           Site Sheet\n      \n\n        </h1>\n  \n    </div>\n  \n  \n\n    \n\n    </>\n  );\n}\n\nexport default Intro;\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/intro-feature/feature.js",["136","137","138"],"import React from 'react';\nimport {CircularProgress} from '@material-ui/core';\nimport { makeStyles , Box } from '@material-ui/core/styles'\nimport  \"./feature.css\";\n\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\n\nfunction Feature() {\n\n  return (\n    <div className=\"intro-feature-comp\">\n       <div className=\"intro-video-Grid\">\n\n       \n        <div className=\"intro-card\">\n            <FileCopyIcon className=\"intro-svg-icon\"/>\n            <h1 className=\"intro-heading\">Make website or api in a snap</h1>\n            <h3 className=\"intro-des\">\n                Just publish your google sheet to web. share your google sheet url and your api or website is ready.<br/>Easy Peasy.\n            </h3>\n     </div>\n\n    <div className=\"intro-card\">\n        <LanguageIcon className=\"intro-svg-icon\"/>\n        <h1 className=\"intro-heading\">Publish website in a snap</h1>\n        <h3 className=\"intro-des\">\n               Share your google sheet url ,choose template you site is ready\n            </h3>\n\n    </div>\n\n    <div className=\"intro-card\">\n    <SentimentVerySatisfiedIcon className=\"intro-svg-icon\"/>\n    <h1 className=\"intro-heading\">Share your data in a cool way</h1>\n    <h3 className=\"intro-des\">\n        Well making website from exel sheet is fun and cool . plus you will have a cool link to share your data.\n     </h3>\n\n    </div>\n\n\n  \n     </div>\n \n  \n  \n\n    \n\n    </div>\n  );\n}\n\nexport default Feature;\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/footer/footer.js",[],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/feature-banner/banner.js",["139","140"],"import React from 'react';\nimport  \"./banner.css\";\n\nimport BannerImg from './info.svg';\n\n\nfunction Banner({}) {\n\n  return (\n    <div className=\"banner-div\">\n   \n   <img src={BannerImg} className=\"banner-img\"/>\n  <h1 className=\"banner-text\"> so, what will you build? </h1>\n    </div>\n  );\n}\n\nexport default Banner;\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/webBuilder/webBulider.js",["141","142","143","144","145","146","147","148"],"import React , {useState}from 'react';\nimport './web.css';\nimport { Button, TextField } from \"@material-ui/core\";\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport { ToastContainer, toast } from 'react-toastify';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { Tooltip } from '@material-ui/core';\n\n\nimport {\n   \n  Link,\n  \n} from \"react-router-dom\";\n\n\n\n\nimport './web.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\n\nimport WebImage from './website.svg';\nimport ApiImage from '../api/api.svg';\nimport  Data from './data';\n\n\n\n\nconst styles =  makeStyles((theme) => ({\n  palette: {\n    primary: '#47ff8c',\n    secondary: '#47ff8c' ,\n  },\n  textField: {\n      width: '75%',    \n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: '7%',\n      color: '#47ff8c',\n      backgroundColor: '#f0f0f0',\n      margiTop: '5%',    \n      paddingBottom: 0,\n      marginTop: 0,\n      fontWeight: 500,\n    \n  },\n  textField1: {\n    width: '50%',    \n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: '7%',\n    color: '#47ff8c',\n    backgroundColor: '#f0f0f0',\n    margiTop: '5%',    \n    paddingBottom: 0,\n    marginTop: 0,\n    fontWeight: 500,\n  \n},\n  \n}) );\n\nfunction WebBulider() {\n  const classes = styles();\n\n \n  var [url ,setUrl ] = useState(null);\n  var [webUrl , setwebUrl] = useState(null);\n  var [chooseTemplate ,setChooseTemplate] = useState(true);\n  const [templateUrl,settemplateUrl] = useState('');\n  var [ok,setOk] = useState(false);\n\n  var changeTemplateUrl = (text) => {\n    settemplateUrl(text);\n    setChooseTemplate(!chooseTemplate); \n    // console.og(templateUrl);\n  }\n\n\n  const getUrl = (e)  => {\n    var data =  e.target.value;\n    setUrl(data);\n   \n  }\n\n\n  \n\n  const checkUrl = () => {\n   if(url == null)\n   {\n    toast.warn('please enter url');\n\n   }else{\n\n    var yo = url.slice(0,39);\n\n    if(yo ==='https://docs.google.com/spreadsheets/d/')\n    {\n      toast('Website is ready');\n      var i = 40;\n      while(url[i] !== '/')\n      {\n        i++;\n      }\n      var uniqueID = url.slice(39,i);\n      var temp = 'https://sitesheet.vercel.app/' + templateUrl +\"/\" + uniqueID  ;\n      setwebUrl(temp);\n\n\n\n\n     }else{\n     toast.error('Please enter URL properly.');\n     }\n    }\n\n  }\n\n const   copyCodeToClipboard = () => {\n    \n  navigator.clipboard.writeText(webUrl)\n    toast('Copied');\n\n  }\n\n\n  return (\n  <div>\n   {!ok && <div className=\"web-intro\">\n       <div className=\"web-intro-heading\"> \n       <h1 className=\"web-h1-yo\">  SiteSheet</h1> <br/> \n        \n       <span className=\"web-text-h2\">Convert your google sheet into website</span>\n        <br/>\n        <ul  className=\"web-ul\">\n          <li>Make sure your data is according to the format</li>\n          <li> Publish your google sheet to web </li>\n          <li> Choose your favorite template</li>\n          <li> Enter you google sheet url</li>\n          <li> Get Link to your site in a snap.</li>         \n         </ul>\n         <br/>\n\n        <Button style={{\n            \n            borderRadius: 25,\n            backgroundColor: \"#47ff8c\",\n            color: \"#787c7a\",\n            textDecoration: false,\n            marginRight: 5,\n\n            \n    \n        }}\n        onClick={ ()=>{setOk(!ok)}}\n        ><h3 className=\"intro-button-text\">Ok let's Start</h3></Button> \n       \n        <Link to=\"/webbuilder/\">\n        <Button\n         style={{\n            \n            borderRadius: 25,\n            backgroundColor: \"#787c7a\",\n            color:\"#47ff8c\",\n            borderWidth: 5,\n            borderColor: \"#787c7a\",\n            textDecoration: false,\n            marginRight: 3,\n\n            \n    \n        }}\n        ><h3 className=\"intro-button-text\"> Tell me more.</h3></Button> \n        </Link>\n        </div>   \n       <img src={WebImage} className=\"web-img\" /> \n     </div>\n\n  } \n    {(chooseTemplate&&ok) && <div className=\"web-choose-template\">\n      <div className=\"web-choose-temp\">\n        <h1 className=\"web-intro-main\"> Site Sheet </h1>\n       <h3 className=\"web-intro-dis\"> Choose your next website from these templates.</h3>\n      </div>\n      <div className=\"web-choose-grid\"> \n       \n       \n       {\n         Data.map(x => \n          <div className=\"web-preview-card\"  >\n          <Tooltip title=\"Visit\">\n            <Link to={x.link} target=\"_blank\">\n            <img src={x.src} height=\"300\"   className=\"img-preview-card\"/>\n            </Link>\n            </Tooltip>\n            <div className=\"card-text\">\n             <h2>{x.name} </h2>\n             <h3  className=\"web-card-text-dis\">{x.dis}</h3>\n            \n           <Button style={{\n               \n               borderRadius: 25,\n               backgroundColor: \"#47ff8c\",\n               color: \"#787c7a\",\n               textDecoration: false,\n               marginRight: 5,\n   \n               \n       \n           }}\n           onClick={\n            ()=> (changeTemplateUrl(x.urlSlag))\n           }\n           \n            ><h3 className=\"intro-button-text\">Use this</h3></Button> \n          \n           <a href={x.exelLink} target=\"_blank\">\n           <Button\n            style={{\n               \n               borderRadius: 25,\n               backgroundColor: \"#787c7a\",\n               color:\"#47ff8c\",\n               borderWidth: 5,\n               borderColor: \"#787c7a\",\n               textDecoration: false,\n               marginRight: 3,\n   \n               \n       \n           }}\n           ><h3 className=\"intro-button-text\">See format file</h3></Button> \n           </a>\n            </div>\n   \n          </div>\n          \n          )\n       }\n      </div>\n\n    </div>}\n    {\n      !chooseTemplate && \n      <div className=\"api-back\">\n      <div className=\"api-details\">\n      <h1 className=\"api-heading\">SiteSheet <br/> Convert your Google sheet into a Website</h1>\n      <div className=\"api-dis\">\n       \n        { !webUrl && <> <span className=\"api-dis-text\"> Make sure you have publised you google sheet to web ,then share your google sheet url.</span> \n   \n    \n   <TextField \n    label=\"Enter Url\"\n    variant=\"outlined\"\n    fullWidth\n    onChange={getUrl}\n    style={{\n      color: '#47ff8c',\n\n    }}\n    className={classes.textField}\n\n\n\n   >\n     </TextField>\n   <Button \n   style={{            \n    backgroundColor: \"#787c7a\",\n    color:\"#47ff8c\",     \n    borderColor: \"#787c7a\",\n    textDecoration: false,\n    marginLeft: '1%',\n  \n     \n\n  }}\n  onClick={checkUrl} > <div className=\"api-button-text\">GO</div></Button>\n  </>\n}  <div>\n   <ToastContainer />\n\n  </div>\n  { webUrl &&<> \n    <span className=\"api-dis-text\"> This is your website url .</span> <br/>\n  <TextField    \n    variant=\"outlined\"\n    fullWidth\n    defaultValue={webUrl}\n    style={{\n      color: '#47ff8c',\n\n    }}\n    className={classes.textField1}\n\n\n\n   />\n  \n  <Button \n   style={{            \n    backgroundColor: \"#787c7a\",\n    color:\"#47ff8c\",     \n    borderColor: \"#787c7a\",\n    textDecoration: false,\n    marginLeft: '1%',\n  \n     \n\n}}\n   onClick={copyCodeToClipboard} > <div className=\"api-button-text\"> <FileCopyIcon /> </div></Button> \n \n <a href={webUrl} target=\"_blank\"  >\n  <Button \n   style={{            \n    backgroundColor: \"#787c7a\",\n    color:\"#47ff8c\",     \n    borderColor: \"#787c7a\",\n    textDecoration: false,\n    marginLeft: '1%',\n  \n     \n\n}}\n   > <div className=\"api-button-text\"> Visit </div></Button> </a>\n   </>}\n   </div>\n   \n    </div>\n\n    <img src={ApiImage}  className=\"api-image\"/>\n    </div>\n\n    }\n  </div>\n  );\n}\n\nexport default WebBulider;\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/webBuilder/data.js",[],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/connect/connect.js",["149","150","151","152","153","154","155","156","157"],"import React , {useState ,useEffect} from \"react\";\nimport Axios from 'axios';\nimport Loading from '../../../comp/loading/loading';\nimport  { Button }from '@material-ui/core';\n\n\nimport './connect.css';\n\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\n\nimport {\n    BrowserRouter as Router,   \n    useParams\n  } from \"react-router-dom\";\n\n\nexport  default function Connect(){\n   \n    const clearText = (text) => {\n        var temp = text.length;\n       var newText = text.slice(8,temp);\n       return newText;\n    };\n    let { id } = useParams();\n    const [data,setData] = useState(null);\n\n    const fetchData = async () => {\n      try{\n          // console.log(id);\n       const {data} = await  Axios.get('https://spreadsheets.google.com/feeds/list/'+id +'/od6/public/basic?alt=json') ;\n       const details = data;\n       setData(details);\n                        \n       console.log(data);\n\n      } catch(error){\n           console.warn(error);\n      }\n      \n    };\n      useEffect(()=>{\n        fetchData();\n      }, [] );\n \n    if(!data)\n    {\n        return(\n    <>\n  <Loading color={'#0000'}/>\n\n    </>\n\n          \n        );\n    }else{\n     var userName = data[\"feed\"].entry[0][\"content\"]['$t'];\n     var userImage = data[\"feed\"].entry[1][\"content\"]['$t'];\n     var userEmail = data[\"feed\"].entry[2][\"content\"]['$t'];\n     var userTwitter = data[\"feed\"].entry[3][\"content\"][\"$t\"];\n     var userFacebook = data[\"feed\"].entry[4][\"content\"][\"$t\"];\n     var userLinkedIn = data[\"feed\"].entry[5][\"content\"][\"$t\"];\n     var userGithub = data[\"feed\"].entry[6][\"content\"][\"$t\"];\n     var userIG = data[\"feed\"].entry[7][\"content\"][\"$t\"];\n     var userYoutube = data[\"feed\"].entry[8][\"content\"][\"$t\"];\n\n\n\n\n\n    \n\n\n\n\n    return (\n      < >\n      <div className=\"connect-bg\"> \n        <img src={clearText(userImage)} className=\"connet-image\"/>\n        <h1>{clearText(userName)} </h1>\n        <h2>{clearText(userEmail)}</h2>\n\n\n        <div className=\"connect-social-icons\">\n        {clearText(userTwitter)  && <>  \n            <a href={clearText(userTwitter)}  target=\"_blank\" >\n       <Button className=\"connect-button-twitter connect-btn\">\n           <TwitterIcon/>\n          <span className=\"connect-button-text\"> Twitter  </span>\n\n         </Button>\n         </a>\n           </>}\n       {clearText(userFacebook) && <> \n        <a href={clearText(userFacebook)}  target=\"_blank\" >\n       <Button className=\"connect-button-Facebook connect-btn\">\n           <FacebookIcon/>\n           <span className=\"connect-button-text\">  Facebook </span>\n         </Button>\n         </a>\n       \n       </>  }\n       {clearText(userLinkedIn) && <> \n        <a href={clearText(userLinkedIn)}  target=\"_blank\" >\n       <Button className=\"connect-button-LinkedIn connect-btn\" >\n      <LinkedInIcon/>\n      <span className=\"connect-button-text\">    LinkedIn </span>\n       </Button>\n            </a> \n        </>}\n       {clearText(userGithub) && <> \n       <a href={clearText(userGithub)}  target=\"_blank\" >\n       <Button className=\"connect-button-Github connect-btn\">\n           \n           < GitHubIcon />   \n           <span className=\"connect-button-text\"> Github </span>\n           \n       </Button>\n            </a> \n            </>}\n            {clearText(userIG) && <> \n       <a href={clearText(userIG)}  target=\"_blank\" >\n       <Button className=\"connect-button-IG connect-btn\">\n           \n           < InstagramIcon/>   \n           <span className=\"connect-button-text\"> Instagram </span>\n           \n       </Button>\n            </a> \n            </>}\n            {clearText(userYoutube) && <> \n       <a href={clearText(userYoutube)}  target=\"_blank\" >\n       <Button className=\"connect-button-youtube connect-btn\">\n           \n           < YouTubeIcon/>   \n           <span className=\"connect-button-text\"> Youtube </span>\n           \n       </Button>\n            </a> \n            </>}\n\n\n\n          </div>\n         </div>\n      \n         </>\n    );\n    }\n};\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/me/me.js",["158","159","160","161","162","163"],"import React , {useState ,useEffect} from \"react\";\nimport Axios from 'axios';\nimport Loading from '../../../comp/loading/loading';\nimport useWindowSize from 'react-use/lib/useWindowSize'\nimport Confetti from 'react-confetti'\nimport Particles from 'react-particles-js';\nimport ParticleComponent from './particle' ;\n\nimport  { Button }from '@material-ui/core';\n\n\n\n\nimport './me.css';\n\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport TwitterIcon from '@material-ui/icons/Twitter';\n\n\n\nimport {\n    BrowserRouter as Router,\n        useParams\n  } from \"react-router-dom\";\n\n\nexport  default function Me(){\n    const { width, height } = useWindowSize()\n\n\n    const clearText = (text) => {\n        var temp = text.length;\n       var newText = text.slice(5,temp);\n       return newText;\n    };\n    let { id } = useParams();\n    const [data,setData] = useState(null);\n\n    const fetchData = async () => {\n        try{\n            // console.log(id);\n         const {data} = await  Axios.get('https://spreadsheets.google.com/feeds/list/'+id +'/od6/public/basic?alt=json') ;\n         const details = data;\n         setData(details);\n                          \n        \n\n        } catch(error){\n             console.warn(error);\n        }\n        \n      };\n      useEffect(()=>{\n        fetchData();\n      }, [] );\n \n    if(!data)\n    {\n        return(\n    <>\n  <Loading color={'#0000'}/>\n\n    </>\n\n          \n        );\n    }else{\n        var userName = data[\"feed\"].entry[0][\"content\"]['$t'];\n        var userImage = data[\"feed\"].entry[1][\"content\"]['$t'];\n        var aboutUser = data[\"feed\"].entry[2][\"content\"][\"$t\"];\n        var userDis = data[\"feed\"].entry[3][\"content\"][\"$t\"];\n        var userGithub = data[\"feed\"].entry[4][\"content\"][\"$t\"];\n        var userLinkedIn = data[\"feed\"].entry[5][\"content\"][\"$t\"];\n        var userTwitter = data[\"feed\"].entry[6][\"content\"][\"$t\"];\n\n   \n        \n\n      return (\n     <>\n      <Router>\n      <div\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\"\n        }}\n      >\n          <ParticleComponent className=\"me-particle-box\" />\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\"\n          }}\n        >\n            <div  className=\"me-container\">\n           <img  className=\"me-image\" src={clearText(userImage)}/>\n          <h1 className=\"me-name\">\n              {clearText(userName)}  \n              </h1>\n          <h2> {clearText(aboutUser)}</h2>\n\n         <p> {clearText(userDis)}</p>\n          <div> \n              <a href={clearText(userGithub)}>\n                  <Button>\n\n              <GitHubIcon/>\n                  </Button>\n              </a>\n              <a href={clearText(userLinkedIn)}>\n                  <Button>\n\n               <LinkedInIcon className=\"connect-button-LinkedIn\"/>\n                  </Button>\n              </a>\n              <a href={clearText(userTwitter)}>\n                  <Button>\n\n                 <TwitterIcon className=\"connect-button-twitter\"/>\n                  </Button>\n\n              </a>\n                \n                  </div>\n         \n          </div>\n        </div>\n      </div>\n    </Router>\n\n     </>\n      \n\n    );\n    }\n};\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/me/particle.js",["164"],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":6,"column":22,"nodeType":"171","messageId":"172","endLine":6,"endColumn":28},{"ruleId":"173","severity":1,"message":"174","line":29,"column":10,"nodeType":"175","endLine":29,"endColumn":12,"suggestions":"176"},{"ruleId":"169","severity":1,"message":"177","line":4,"column":22,"nodeType":"171","messageId":"172","endLine":4,"endColumn":26},{"ruleId":"178","severity":1,"message":"179","line":29,"column":7,"nodeType":"180","messageId":"181","endLine":29,"endColumn":16},{"ruleId":"182","severity":1,"message":"183","line":162,"column":5,"nodeType":"184","endLine":162,"endColumn":49},{"ruleId":"169","severity":1,"message":"170","line":14,"column":22,"nodeType":"171","messageId":"172","endLine":14,"endColumn":28},{"ruleId":"169","severity":1,"message":"185","line":40,"column":12,"nodeType":"171","messageId":"172","endLine":40,"endColumn":21},{"ruleId":"169","severity":1,"message":"186","line":40,"column":22,"nodeType":"171","messageId":"172","endLine":40,"endColumn":34},{"ruleId":"173","severity":1,"message":"174","line":58,"column":10,"nodeType":"175","endLine":58,"endColumn":12,"suggestions":"187"},{"ruleId":"169","severity":1,"message":"170","line":16,"column":22,"nodeType":"171","messageId":"172","endLine":16,"endColumn":28},{"ruleId":"173","severity":1,"message":"174","line":50,"column":10,"nodeType":"175","endLine":50,"endColumn":12,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":68,"column":13,"nodeType":"171","messageId":"191","endLine":68,"endColumn":16},{"ruleId":"169","severity":1,"message":"170","line":19,"column":22,"nodeType":"171","messageId":"172","endLine":19,"endColumn":28},{"ruleId":"173","severity":1,"message":"174","line":50,"column":10,"nodeType":"175","endLine":50,"endColumn":12,"suggestions":"192"},{"ruleId":"182","severity":1,"message":"183","line":117,"column":7,"nodeType":"184","endLine":117,"endColumn":73},{"ruleId":"165","replacedBy":"193"},{"ruleId":"167","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":13,"column":16,"nodeType":"197","messageId":"181","endLine":13,"endColumn":18},{"ruleId":"198","severity":1,"message":"199","line":23,"column":9,"nodeType":"184","endLine":23,"endColumn":74},{"ruleId":"169","severity":1,"message":"200","line":2,"column":9,"nodeType":"171","messageId":"172","endLine":2,"endColumn":25},{"ruleId":"169","severity":1,"message":"201","line":3,"column":10,"nodeType":"171","messageId":"172","endLine":3,"endColumn":20},{"ruleId":"169","severity":1,"message":"202","line":3,"column":23,"nodeType":"171","messageId":"172","endLine":3,"endColumn":26},{"ruleId":"195","severity":1,"message":"196","line":7,"column":17,"nodeType":"197","messageId":"181","endLine":7,"endColumn":19},{"ruleId":"182","severity":1,"message":"183","line":12,"column":4,"nodeType":"184","endLine":12,"endColumn":49},{"ruleId":"169","severity":1,"message":"177","line":4,"column":22,"nodeType":"171","messageId":"172","endLine":4,"endColumn":26},{"ruleId":"178","severity":1,"message":"179","line":46,"column":7,"nodeType":"180","messageId":"181","endLine":46,"endColumn":16},{"ruleId":"178","severity":1,"message":"179","line":59,"column":5,"nodeType":"180","messageId":"181","endLine":59,"endColumn":14},{"ruleId":"182","severity":1,"message":"183","line":180,"column":8,"nodeType":"184","endLine":180,"endColumn":50},{"ruleId":"182","severity":1,"message":"183","line":197,"column":13,"nodeType":"184","endLine":197,"endColumn":75},{"ruleId":"203","severity":1,"message":"204","line":221,"column":12,"nodeType":"184","endLine":221,"endColumn":49},{"ruleId":"203","severity":1,"message":"204","line":318,"column":2,"nodeType":"184","endLine":318,"endColumn":37},{"ruleId":"182","severity":1,"message":"183","line":336,"column":5,"nodeType":"184","endLine":336,"endColumn":49},{"ruleId":"169","severity":1,"message":"170","line":18,"column":22,"nodeType":"171","messageId":"172","endLine":18,"endColumn":28},{"ruleId":"173","severity":1,"message":"174","line":49,"column":10,"nodeType":"175","endLine":49,"endColumn":12,"suggestions":"205"},{"ruleId":"182","severity":1,"message":"183","line":84,"column":9,"nodeType":"184","endLine":84,"endColumn":67},{"ruleId":"203","severity":1,"message":"204","line":91,"column":13,"nodeType":"184","endLine":91,"endColumn":64},{"ruleId":"203","severity":1,"message":"204","line":100,"column":9,"nodeType":"184","endLine":100,"endColumn":61},{"ruleId":"203","severity":1,"message":"204","line":109,"column":9,"nodeType":"184","endLine":109,"endColumn":61},{"ruleId":"203","severity":1,"message":"204","line":117,"column":8,"nodeType":"184","endLine":117,"endColumn":58},{"ruleId":"203","severity":1,"message":"204","line":127,"column":8,"nodeType":"184","endLine":127,"endColumn":54},{"ruleId":"203","severity":1,"message":"204","line":137,"column":8,"nodeType":"184","endLine":137,"endColumn":59},{"ruleId":"169","severity":1,"message":"206","line":5,"column":8,"nodeType":"171","messageId":"172","endLine":5,"endColumn":16},{"ruleId":"169","severity":1,"message":"207","line":6,"column":8,"nodeType":"171","messageId":"172","endLine":6,"endColumn":17},{"ruleId":"169","severity":1,"message":"208","line":30,"column":13,"nodeType":"171","messageId":"172","endLine":30,"endColumn":18},{"ruleId":"169","severity":1,"message":"209","line":30,"column":20,"nodeType":"171","messageId":"172","endLine":30,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":57,"column":10,"nodeType":"175","endLine":57,"endColumn":12,"suggestions":"210"},{"ruleId":"182","severity":1,"message":"183","line":104,"column":12,"nodeType":"184","endLine":104,"endColumn":67},{"ruleId":"195","severity":1,"message":"196","line":6,"column":29,"nodeType":"197","messageId":"181","endLine":6,"endColumn":32},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["213"],"'fade' is defined but never used.","no-dupe-keys","Duplicate key 'marginTop'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'sheetData' is assigned a value but never used.","'setSheetData' is assigned a value but never used.",["214"],["215"],"no-redeclare","'len' is already defined.","redeclared",["216"],["211"],["212"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'CircularProgress' is defined but never used.","'makeStyles' is defined but never used.","'Box' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener",["217"],"'Confetti' is defined but never used.","'Particles' is defined but never used.","'width' is assigned a value but never used.","'height' is assigned a value but never used.",["218"],"no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"219","fix":"221"},{"desc":"219","fix":"222"},{"desc":"219","fix":"223"},{"desc":"219","fix":"224"},{"desc":"219","fix":"225"},"Update the dependencies array to be: [fetchData]",{"range":"226","text":"227"},{"range":"228","text":"227"},{"range":"229","text":"227"},{"range":"230","text":"227"},{"range":"231","text":"227"},{"range":"232","text":"227"},[725,727],"[fetchData]",[1363,1365],[1179,1181],[1428,1430],[1303,1305],[1363,1365]]