[{"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/index.js":"1","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/App.js":"2","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/reportWebVitals.js":"3","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/home.js":"4","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/profile.js":"5","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/loading/loading.js":"6","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/api/api.js":"7","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/youtube/youtube.js":"8","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/bigTable/table.js":"9","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/random/random.js":"10","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/cafe/cafe.js":"11","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/Header/header.js":"12","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/themes/theme.js":"13","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/feature-list/feature.js":"14","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/contact/contact.js":"15","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/div-line/divLine.js":"16","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/landingPage/landingPage.js":"17","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/Intro/intro.js":"18","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/intro-feature/feature.js":"19","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/footer/footer.js":"20","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/feature-banner/banner.js":"21","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/webBuilder/webBulider.js":"22","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/webBuilder/data.js":"23","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/connect/connect.js":"24"},{"size":675,"mtime":1611854118434,"results":"25","hashOfConfig":"26"},{"size":1555,"mtime":1612349146025,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1611598615840,"results":"28","hashOfConfig":"26"},{"size":437,"mtime":1611999326410,"results":"29","hashOfConfig":"26"},{"size":908,"mtime":1611725498087,"results":"30","hashOfConfig":"26"},{"size":499,"mtime":1611665517871,"results":"31","hashOfConfig":"26"},{"size":3358,"mtime":1612013267209,"results":"32","hashOfConfig":"26"},{"size":2439,"mtime":1612410907993,"results":"33","hashOfConfig":"26"},{"size":1571,"mtime":1611725483307,"results":"34","hashOfConfig":"26"},{"size":2014,"mtime":1611755233079,"results":"35","hashOfConfig":"26"},{"size":4760,"mtime":1612261138626,"results":"36","hashOfConfig":"26"},{"size":2471,"mtime":1611855550194,"results":"37","hashOfConfig":"26"},{"size":1145,"mtime":1612003708347,"results":"38","hashOfConfig":"26"},{"size":3403,"mtime":1611856354887,"results":"39","hashOfConfig":"26"},{"size":4594,"mtime":1611857295844,"results":"40","hashOfConfig":"26"},{"size":202,"mtime":1611857814871,"results":"41","hashOfConfig":"26"},{"size":936,"mtime":1611925047885,"results":"42","hashOfConfig":"26"},{"size":1736,"mtime":1612156274655,"results":"43","hashOfConfig":"26"},{"size":1561,"mtime":1611996282767,"results":"44","hashOfConfig":"26"},{"size":190,"mtime":1611998191344,"results":"45","hashOfConfig":"26"},{"size":437,"mtime":1612000413629,"results":"46","hashOfConfig":"26"},{"size":6653,"mtime":1612196172028,"results":"47","hashOfConfig":"26"},{"size":1702,"mtime":1612371578334,"results":"48","hashOfConfig":"26"},{"size":4286,"mtime":1612370426561,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1qu05x2",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"52"},"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/index.js",[],["114","115"],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/App.js",["116","117"],"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n} from \"react-router-dom\";\nimport Profile from \"./pages/templates/profile\";\nimport Home from \"./pages/home\";\nimport Api from \"./pages/api/api\";\nimport Youtube from \"./pages/templates/youtube/youtube\";\nimport Table from \"./pages/templates/bigTable/table\";\nimport Random from \"./pages/templates/random/random\";\nimport Cafe from \"./pages/templates/cafe/cafe\";\nimport LandingPage from \"./pages/templates/landingPage/landingPage\";\nimport WebBuilder from './pages/webBuilder/webBulider';\nimport Connect from './pages/templates/connect/connect' ;\n\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/api\">\n              <Api />\n            </Route>\n            <Route path=\"/profile/:id\" children={<Profile />} />\n            <Route path=\"/youtube/:id\" children={<Youtube />} />\n            <Route path=\"/table/:id\" children={<Table />} />\n            <Route path=\"/table/:id\" children={<Table />} />\n            <Route path=\"/random/:id\" children={<Random />} />\n            <Route path=\"/cafe/:id\" children={<Cafe />} />\n            <Route path=\"/landinPage/:id\" children={<LandingPage />} />\n            <Route path=\"/webbuilder/\" children={<WebBuilder/>} />\n            <Route path=\"/connect/:id\" children={< Connect />}  />\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/reportWebVitals.js",[],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/home.js",["118","119","120","121","122"],"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n} from \"react-router-dom\";\n\n\nimport Intro from '../comp/Intro/intro';\nimport Feature from '../comp/intro-feature/feature';\nimport Footer from '../comp/footer/footer';\nimport Banner from '../comp/feature-banner/banner';\n\nfunction Home() {\n  return <>\n   <Intro/>\n   <Feature />\n   <Banner/>\n   <Footer/>\n  </>;\n}\n\nexport default Home;\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/profile.js",["123","124"],"import React , {useState ,useEffect} from \"react\";\nimport Axios from 'axios';\nimport Loading from '../../comp/loading/loading';\n\nimport {\n    BrowserRouter as Router,\n  \n    useParams\n  } from \"react-router-dom\";\n\n\nexport  default function Profile(){\n    let { id } = useParams();\n    const [data,setData] = useState(null);\n\n    const fetchData = async () => {\n        try{\n            // console.log(id);\n         const {data} = await  Axios.get('https://spreadsheets.google.com/feeds/list/'+id +'/od6/public/basic?alt=json') ;\n         const details = data;\n         setData(details);\n        } catch(error){\n             console.warn(error);\n        }\n        \n      };\n      useEffect(()=>{\n        fetchData();\n      }, [] );\n \n    if(!data)\n    {\n        return(\n    <>\n  <Loading/>\n\n    </>\n\n          \n        );\n    }else{\n    return (\n      <div>\n        <h3>ID: </h3>\n      </div>\n    );\n    }\n};\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/loading/loading.js",["125","126"],"import React from 'react';\nimport {CircularProgress} from '@material-ui/core';\nimport { makeStyles , Box } from '@material-ui/core/styles'\nimport  \"./loading.css\";\nimport Funnies from 'funnies';\n\n\n\nfunction Loading({color}) {\n  let funnies = new Funnies();\n\n  return (\n    <>\n   \n   <div className=\"centered \">\n   \n   <h1>\n     {funnies.message()} <br/>\n   <div className=\"loading\">  <CircularProgress color={color}  /> </div>\n   </h1>\n   </div>\n  \n  \n\n    \n\n    </>\n  );\n}\n\nexport default Loading;\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/api/api.js",["127","128","129"],"import React , {useState}from 'react';\nimport './api.css';\nimport { Button, TextField } from \"@material-ui/core\";\nimport { makeStyles, fade } from '@material-ui/core/styles';\n\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport ApiImage from './api.svg';\n\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n\nconst styles =  makeStyles((theme) => ({\n  palette: {\n    primary: '#47ff8c',\n    secondary: '#47ff8c' ,\n  },\n  textField: {\n      width: '75%',    \n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: '7%',\n      color: '#47ff8c',\n      backgroundColor: '#f0f0f0',\n      margiTop: '5%',    \n      paddingBottom: 0,\n      marginTop: 0,\n      fontWeight: 500,\n    \n  },\n  \n}) );\n\nfunction Api() {\n  const classes = styles();\n\n \n  var [url ,setUrl ] = useState(null);\n  var [apiUrl , setApiUrl] = useState(null);\n\n  const getUrl = (e)  => {\n    var data =  e.target.value;\n    setUrl(data);\n   \n  }\n\n  const checkUrl = () => {\n   if(url == null)\n   {\n    toast.warn('please enter url');\n\n   }else{\n\n    var yo = url.slice(0,39);\n\n    if(yo ==='https://docs.google.com/spreadsheets/d/')\n    {\n      toast('Api is ready');\n      console.log(yo);\n      var i = 40;\n      while(url[i] !== '/')\n      {\n        i++;\n      }\n      var uniqueID = url.slice(39,i);\n      console.log(uniqueID);\n      var temp = 'https://spreadsheets.google.com/feeds/list/' + uniqueID + '/od6/public/basic?alt=json ';\n      setApiUrl(temp);\n\n\n\n\n     }else{\n     toast.error('Please enter URL properly.');\n     }\n    }\n\n  }\n\n const   copyCodeToClipboard = () => {\n    \n  navigator.clipboard.writeText(apiUrl)\n    toast('Copied');\n\n  }\n\n\n  return (\n    <div className=\"api-back\">\n     <div className=\"api-details\">\n     <h1 className=\"api-heading\">Convert your Google sheet into a Api.</h1>\n     <div className=\"api-dis\">\n   { !apiUrl && <> <span className=\"api-dis-text\"> Make sure you have publised you google sheet to web ,then share your google sheet url.</span> \n   \n    \n     <TextField \n      label=\"Enter Url\"\n      variant=\"outlined\"\n      fullWidth\n      onChange={getUrl}\n      style={{\n        color: '#47ff8c',\n\n      }}\n      className={classes.textField}\n\n  \n\n     >\n       </TextField>\n     <Button \n     style={{            \n      backgroundColor: \"#787c7a\",\n      color:\"#47ff8c\",     \n      borderColor: \"#787c7a\",\n      textDecoration: false,\n      marginLeft: '1%',\n    \n       \n\n  }}\n     onClick={checkUrl} > <div className=\"api-button-text\">GO</div></Button>\n    </>\n  }  <div>\n     <ToastContainer />\n\n    </div>\n    { apiUrl &&<> \n      <span className=\"api-dis-text\"> This is your api end point copy it and use it in your web application.</span> \n    <TextField    \n      variant=\"outlined\"\n      fullWidth\n      defaultValue={apiUrl}\n      style={{\n        color: '#47ff8c',\n\n      }}\n      className={classes.textField}\n\n  \n\n     />\n    \n    <Button \n     style={{            \n      backgroundColor: \"#787c7a\",\n      color:\"#47ff8c\",     \n      borderColor: \"#787c7a\",\n      textDecoration: false,\n      marginLeft: '1%',\n    \n       \n\n  }}\n     onClick={copyCodeToClipboard} > <div className=\"api-button-text\"> <FileCopyIcon /> </div></Button>\n     </>}\n    </div>\n    </div>\n\n    <img src={ApiImage}  className=\"api-image\"/>\n    </div>\n  );\n}\n\nexport default Api;\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/youtube/youtube.js",["130","131","132","133","134","135","136","137","138"],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/bigTable/table.js",["139","140","141","142","143","144","145","146"],"import React , {useState ,useEffect} from \"react\";\nimport Axios from 'axios';\nimport Loading from '../../../comp/loading/loading';\nimport ReactPlayer from 'react-player'\n\n\n\nimport './table.css';\n\n\n\nimport {\n    BrowserRouter as Router,\n   \n    useParams\n  } from \"react-router-dom\";\n\n\nexport  default function Table(){\n     const clearLink = (link) => {\n        var j = 0;\n        while(link[j] !== 'h')\n        {\n            j++;\n        }\n        var temp = link.length;\n         var newLink = link.slice(j,temp);\n        // console.log(newLink);\n        return newLink;\n      \n    };\n    const clearText = (text) => {\n        var temp = text.length;\n       var newText = text.slice(6,temp);\n       return newText;\n    };\n    let { id } = useParams();\n    const [data,setData] = useState(null);\n    const [sheetData,setSheetData] = useState(null);\n\n    const fetchData = async () => {\n        try{\n            // console.log(id);\n         const {data} = await  Axios.get('https://spreadsheets.google.com/feeds/list/'+id +'/od6/public/basic?alt=json') ;\n         const details = data;\n         setData(details[\"feed\"].entry);\n                          \n        \n\n        } catch(error){\n             console.warn(error);\n        }\n        \n      };\n      useEffect(()=>{\n        fetchData();\n      }, [] );\n \n    if(!data)\n    {\n        return(\n    <>\n  <Loading color={'#0000'}/>\n\n    </>\n\n          \n        );\n    }else{\n        var len = data.length;\n        var mainData = data.slice(1,len);\n    return (\n      < >\n      This is table comp\n     </>\n    );\n    }\n};\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/random/random.js",["147","148","149"],"import React , {useState ,useEffect} from \"react\";\nimport Axios from 'axios';\nimport Loading from '../../../comp/loading/loading';\nimport useWindowSize from 'react-use/lib/useWindowSize'\nimport Confetti from 'react-confetti'\n\n\n\n\nimport './random.css';\nimport WinnerImage from '../../../assets/winner.png' ;\n\n\n\nimport {\n    BrowserRouter as Router,\n        useParams\n  } from \"react-router-dom\";\n\n\nexport  default function Random(){\n    const { width, height } = useWindowSize()\n\n    function getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n  \n    let { id } = useParams();\n    const [data,setData] = useState(null);\n\n    const fetchData = async () => {\n        try{\n            // console.log(id);\n         const {data} = await  Axios.get('https://spreadsheets.google.com/feeds/list/'+id +'/od6/public/basic?alt=json') ;\n         const details = data;\n         setData(details[\"feed\"].entry);\n                          \n        \n\n        } catch(error){\n             console.warn(error);\n        }\n        \n      };\n      useEffect(()=>{\n        fetchData();\n      }, [] );\n \n    if(!data)\n    {\n        return(\n    <>\n  <Loading color={'#0000'}/>\n\n    </>\n\n          \n        );\n    }else{\n        var len = data.length;\n        var ran =   getRandomInt(0,len) ;\n        var randomWinner = data[ran];   \n        const name= randomWinner['title'][\"$t\"]; \n        const email = randomWinner['content'][\"$t\"];\n        var len = email.length;\n        const mainMail = email.slice(7,len);\n\n      return (\n     <>\n     <Confetti\n      width={width}\n      height={height}\n    />\n              <img src={WinnerImage} className=\"main-image-hero\" alt=\"WinnerImage\"></img>\n\n    <div className=\"centered-this\">\n        <h3 className=\"talor\">The winner is 🏆 </h3> <br/>\n     <h1 className=\"talor text\">{name}</h1> <br/>\n      <span className=\"talor\">{mainMail}</span>\n    </div>\n     </>\n      \n\n    );\n    }\n};\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/cafe/cafe.js",["150","151","152","153","154"],"import React , {useState ,useEffect} from \"react\";\nimport Axios from 'axios';\nimport Loading from '../../../comp/loading/loading';\nimport ReactPlayer from 'react-player'\nimport  { Button }from '@material-ui/core';\nimport FacebookIcon from '@material-ui/icons/Facebook';\n\n\nimport './cafe.css';\nimport Coffe from '../../../assets/coffee.svg';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\nimport EmojiFoodBeverageIcon from '@material-ui/icons/EmojiFoodBeverage';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\n\nimport {\n    BrowserRouter as Router,   \n    useParams\n  } from \"react-router-dom\";\nimport { PhoneInTalk } from \"@material-ui/icons\";\n\n\nexport  default function Cafe(){\n   \n    const clearText = (text) => {\n        var temp = text.length;\n       var newText = text.slice(8,temp);\n       return newText;\n    };\n    let { id } = useParams();\n    const [data,setData] = useState(null);\n\n    const fetchData = async () => {\n      try{\n          // console.log(id);\n       const {data} = await  Axios.get('https://spreadsheets.google.com/feeds/list/'+id +'/od6/public/basic?alt=json') ;\n       const details = data;\n       setData(details);\n                        \n       console.log(data);\n\n      } catch(error){\n           console.warn(error);\n      }\n      \n    };\n      useEffect(()=>{\n        fetchData();\n      }, [] );\n \n    if(!data)\n    {\n        return(\n    <>\n  <Loading color={'#0000'}/>\n\n    </>\n\n          \n        );\n    }else{\n     var cafeName = data[\"feed\"].entry[0][\"content\"]['$t'];\n     var cafeTagline = data[\"feed\"].entry[1][\"content\"]['$t'];\n     var cafeNumber = data[\"feed\"].entry[2][\"content\"][\"$t\"];\n     var newNumber = \"tel:\" + clearText(cafeNumber);\n     var cafeFacebook = data[\"feed\"].entry[3][\"content\"][\"$t\"];\n     var cafeTwitter = data[\"feed\"].entry[4][\"content\"][\"$t\"];\n     var cafeAddress = data[\"feed\"].entry[5][\"content\"][\"$t\"];\n     var header1 = data[\"feed\"].entry[6][\"content\"][\"$t\"];\n     var header2 = data[\"feed\"].entry[7][\"content\"][\"$t\"];\n     var header3 = data[\"feed\"].entry[8][\"content\"][\"$t\"];\n\n\n\n\n    return (\n      < >\n      <div>\n        </div>\n    \n     <div className=\"social-bar\">\n       <div className=\"bar-line\">\n       </div>\n      < a href={newNumber}>\n      <Button>\n       <PhoneIcon fontSize=\"large\" />\n     \n      </Button>\n      </a>\n      <a href={clearText(cafeFacebook)}>\n      <Button>\n          \n       <FacebookIcon fontSize=\"large\" />\n       \n      </Button>\n      </a>\n       \n      <a href={clearText(cafeTwitter)}>\n      <Button>\n       <TwitterIcon fontSize=\"large\" />\n     \n      </Button>\n      </a>\n      \n      </div>\n        \n      <div className=\"bottom\">\n          <div className=\"bar-line\"></div>\n      </div>\n      <div className=\"cafe-wrapper\">\n        <div>\n      <h1 className=\"cafe-name-text\"> {clearText(cafeName)} </h1> <br/>  \n       <h1 className=\"cafe-dis-text\">{clearText(cafeTagline)} </h1>\n     \n       </div>\n      <img className=\"hero-img\" src={Coffe}  width=\"60%\" height=\"100%\"/>\n      </div>\n        \n          <div className=\"bar-line\"></div>\n        <div className=\"cafe-card-Grid\">\n\n        <div className=\"cafe-card\">\n            <Button className=\"cafe-card-bg\">\n          <div className=\"cafe-details\">\n        <MotorcycleIcon fontSize=\"large\" className=\"card-icon\"  />\n        <h1 > {clearText(header1)}  </h1>\n\n          </div>\n          </Button>\n          </div>\n          <div className=\"cafe-card\">\n          <Button className=\"cafe-card-bg\">\n          <div className=\"cafe-details\">\n        <EmojiFoodBeverageIcon fontSize=\"large\" className=\"card-icon\"  />\n        <h1 > {clearText(header2)} </h1>\n\n          </div>\n          </Button>\n\n          </div>\n           <div className=\"cafe-card\">\n           <Button className=\"cafe-card-bg\">\n          <div className=\"cafe-details\">\n        <WatchLaterIcon fontSize=\"large\" className=\"card-icon\"  />\n        <h1 > {clearText(header3)}</h1>\n\n          </div>\n          </Button>\n\n\n          </div>\n        </div>\n        <div className=\"bar-line bar-gap\"></div>\n     \n        <div className=\"cafe-last-div\">\n          <br/>\n          <br/><br/>\n          <div className=\"cafe-last-text\">\n        < a href={newNumber}>\n      <Button>\n       <PhoneIcon fontSize=\"large\" />\n     \n      </Button>\n      </a>\n            \n            Order Now!!! </div>\n            \n              <LocationOnIcon/>  <br/>\n              \n              \n            <span className=\"cafe-h3\"> \n              {clearText(cafeAddress)}</span>\n              \n              \n\n         </div>\n      \n         </>\n    );\n    }\n};\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/Header/header.js",[],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/themes/theme.js",[],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/feature-list/feature.js",[],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/contact/contact.js",[],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/div-line/divLine.js",[],["155","156"],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/landingPage/landingPage.js",["157","158","159","160","161"],"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n} from \"react-router-dom\";\n\nimport Header from  '../../../comp/Header/header'\nimport Feature from \"../../../comp/feature-list/feature\";\nimport Contact from \"../../../comp/contact/contact\";\n\nfunction LandingPage() {\n  return (\n    <>\n      <Header\n        mainHeader=\"main Header\"\n        anotherHeader=\"anotherHeader\"\n        dis=\"dis\"\n        mainAction=\"mainAction\"\n        secondaryAction=\"secaction\"\n      />\n\n      <Feature\n        badge=\"cool app\"\n        header1=\"yo!header one \"\n        header2=\"yo header two\"\n        dis=\"disss\"\n        feature1=\"cool app\"\n        feature2=\"cool2\"\n        feature3=\"cool3\"\n      />\n      <Contact\n        header=\"reach us out\"\n        dis=\"nanital,uk\"\n        address=\"haldwai\"\n        statePin=\"263139\"\n        email=\"hello@gmail.com\"\n      />\n    </>\n  );\n}\n\nexport default LandingPage;\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/Intro/intro.js",["162","163"],"import React from 'react';\nimport { Button} from '@material-ui/core/'\nimport Exel from './exel.svg';\nimport  \"./intro.css\";\nimport Typewriter from 'typewriter-effect';\n\nimport {\n   \n    Link,\n    \n  } from \"react-router-dom\";\n\nfunction Intro({}) {\n\n  return (\n    <>\n   \n    <div className=\"intro-bg\" >\n    <div className=\"intro-blankSpace\">\n          \n\n         </div>\n        <img src={Exel} className=\"intro-exelImg\"></img>\n        \n\n        <div className=\"intro-Buttons\">\n        \n\n        </div>\n\n    <h3 className=\"intro-typeWrite\">\n        <Typewriter\n        options={{\n            strings: ['API', 'Website','Fun Game'],\n            autoStart: true,\n            loop: true,\n        }}\n        \n        /> \n        <Link to=\"/api\" >\n        <Button style={{\n            \n            borderRadius: 25,\n            backgroundColor: \"#47ff8c\",\n            color: \"#787c7a\",\n            textDecoration: false,\n            marginRight: 5,\n\n            \n    \n        }} ><h3 className=\"intro-button-text\">Convert into API</h3></Button> \n        </Link>\n        <Link to=\"/webbuilder/\">\n        <Button\n         style={{\n            \n            borderRadius: 25,\n            backgroundColor: \"#787c7a\",\n            color:\"#47ff8c\",\n            borderWidth: 5,\n            borderColor: \"#787c7a\",\n            textDecoration: false,\n            marginRight: 3,\n\n            \n    \n        }}\n        ><h3 className=\"intro-button-text\">Convert into Website</h3></Button> \n        </Link>\n        </h3>\n      \n        <h2 className=\"intro-h3\">\n           Convert Google Sheets into\n        </h2>\n       <h1 className=\"intro-h1\">\n           Site Sheet\n      \n\n        </h1>\n  \n    </div>\n  \n  \n\n    \n\n    </>\n  );\n}\n\nexport default Intro;\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/intro-feature/feature.js",["164","165","166"],"import React from 'react';\nimport {CircularProgress} from '@material-ui/core';\nimport { makeStyles , Box } from '@material-ui/core/styles'\nimport  \"./feature.css\";\n\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\n\nfunction Feature() {\n\n  return (\n    <div className=\"intro-feature-comp\">\n       <div className=\"intro-video-Grid\">\n\n       \n        <div className=\"intro-card\">\n            <FileCopyIcon className=\"intro-svg-icon\"/>\n            <h1 className=\"intro-heading\">Make website or api in a snap</h1>\n            <h3 className=\"intro-des\">\n                Just publish your google sheet to web. share your google sheet url and your api or website is ready.<br/>Easy Peasy.\n            </h3>\n     </div>\n\n    <div className=\"intro-card\">\n        <LanguageIcon className=\"intro-svg-icon\"/>\n        <h1 className=\"intro-heading\">Publish website in a snap</h1>\n        <h3 className=\"intro-des\">\n               Share your google sheet url ,choose template you site is ready\n            </h3>\n\n    </div>\n\n    <div className=\"intro-card\">\n    <SentimentVerySatisfiedIcon className=\"intro-svg-icon\"/>\n    <h1 className=\"intro-heading\">Share your data in a cool way</h1>\n    <h3 className=\"intro-des\">\n        Well making website from exel sheet is fun and cool . plus you will have a cool link to share your data.\n     </h3>\n\n    </div>\n\n\n  \n     </div>\n \n  \n  \n\n    \n\n    </div>\n  );\n}\n\nexport default Feature;\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/footer/footer.js",[],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/comp/feature-banner/banner.js",["167","168","169","170"],"import React from 'react';\nimport { Button} from '@material-ui/core/'\nimport  \"./banner.css\";\n\nimport BannerImg from './info.svg';\n\nimport {\n   \n    Link,\n    \n  } from \"react-router-dom\";\n\nfunction Banner({}) {\n\n  return (\n    <div className=\"banner-div\">\n   \n   <img src={BannerImg} className=\"banner-img\"/>\n  <h1 className=\"banner-text\"> so, with over 6+ templates what will you build? </h1>\n    </div>\n  );\n}\n\nexport default Banner;\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/webBuilder/webBulider.js",["171","172","173","174","175","176","177","178"],"import React , {useState}from 'react';\nimport './web.css';\nimport { Button, TextField } from \"@material-ui/core\";\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport { ToastContainer, toast } from 'react-toastify';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { Tooltip } from '@material-ui/core';\n\n\nimport {\n   \n  Link,\n  \n} from \"react-router-dom\";\n\n\n\n\nimport './web.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\n\nimport WebImage from './website.svg';\nimport ApiImage from '../api/api.svg';\nimport  Data from './data';\n\n\n\n\nconst styles =  makeStyles((theme) => ({\n  palette: {\n    primary: '#47ff8c',\n    secondary: '#47ff8c' ,\n  },\n  textField: {\n      width: '75%',    \n      marginLeft: 'auto',\n      marginRight: 'auto',\n      marginTop: '7%',\n      color: '#47ff8c',\n      backgroundColor: '#f0f0f0',\n      margiTop: '5%',    \n      paddingBottom: 0,\n      marginTop: 0,\n      fontWeight: 500,\n    \n  },\n  textField1: {\n    width: '50%',    \n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: '7%',\n    color: '#47ff8c',\n    backgroundColor: '#f0f0f0',\n    margiTop: '5%',    \n    paddingBottom: 0,\n    marginTop: 0,\n    fontWeight: 500,\n  \n},\n  \n}) );\n\nfunction WebBulider() {\n  const classes = styles();\n\n \n  var [url ,setUrl ] = useState(null);\n  var [webUrl , setwebUrl] = useState(null);\n  var [chooseTemplate ,setChooseTemplate] = useState(true);\n  const [templateUrl,settemplateUrl] = useState('');\n\n  var changeTemplateUrl = (text) => {\n    settemplateUrl(text);\n    setChooseTemplate(!chooseTemplate); \n    console.log(templateUrl);\n  }\n\n\n  const getUrl = (e)  => {\n    var data =  e.target.value;\n    setUrl(data);\n   \n  }\n\n\n  \n\n  const checkUrl = () => {\n   if(url == null)\n   {\n    toast.warn('please enter url');\n\n   }else{\n\n    var yo = url.slice(0,39);\n\n    if(yo ==='https://docs.google.com/spreadsheets/d/')\n    {\n      toast('Website is ready');\n      console.log(yo);\n      var i = 40;\n      while(url[i] !== '/')\n      {\n        i++;\n      }\n      var uniqueID = url.slice(39,i);\n      var temp = 'https://sitesheet.vercel.app/' + templateUrl +\"/\" + uniqueID  ;\n      setwebUrl(temp);\n\n\n\n\n     }else{\n     toast.error('Please enter URL properly.');\n     }\n    }\n\n  }\n\n const   copyCodeToClipboard = () => {\n    \n  navigator.clipboard.writeText(webUrl)\n    toast('Copied');\n\n  }\n\n\n  return (\n  <div>\n   {chooseTemplate && <div className=\"web-intro\">\n       <div className=\"web-intro-heading\"> \n       <h1 className=\"web-h1-yo\">  SiteSheet</h1> <br/> \n        \n       <span className=\"web-text-h2\">Convert your google sheet into website</span>\n        <br/>\n        <ul  className=\"web-ul\">\n          <li>Make sure your data is according to the format</li>\n          <li> Publish your google sheet to web </li>\n          <li> Choose your favorite template</li>\n          <li> Enter you google sheet url</li>\n          <li> Get Link to your site in a snap.</li>         \n         </ul>\n        </div>   \n       <img src={WebImage} className=\"web-img\" /> \n     </div>\n\n  } \n    {chooseTemplate && <div className=\"web-choose-template\">\n      <div className=\"web-choose-temp\">\n       <h3 className=\"web-intro-dis\"> Choose your next website from these templates.</h3>\n      </div>\n      <div className=\"web-choose-grid\"> \n       \n       \n       {\n         Data.map(x => \n          <div className=\"web-preview-card\"  >\n          <Tooltip title=\"Visit\">\n            <Link to={x.link} target=\"_blank\">\n            <img src={x.src} height=\"300\"   className=\"img-preview-card\"/>\n            </Link>\n            </Tooltip>\n            <div className=\"card-text\">\n             <h2>{x.name} </h2>\n             <h3  className=\"web-card-text-dis\">{x.dis}</h3>\n            \n           <Button style={{\n               \n               borderRadius: 25,\n               backgroundColor: \"#47ff8c\",\n               color: \"#787c7a\",\n               textDecoration: false,\n               marginRight: 5,\n   \n               \n       \n           }}\n           onClick={\n            ()=> (changeTemplateUrl(x.urlSlag))\n           }\n           \n            ><h3 className=\"intro-button-text\">Use this</h3></Button> \n          \n           <a href={x.exelLink} target=\"_blank\">\n           <Button\n            style={{\n               \n               borderRadius: 25,\n               backgroundColor: \"#787c7a\",\n               color:\"#47ff8c\",\n               borderWidth: 5,\n               borderColor: \"#787c7a\",\n               textDecoration: false,\n               marginRight: 3,\n   \n               \n       \n           }}\n           ><h3 className=\"intro-button-text\">See format file</h3></Button> \n           </a>\n            </div>\n   \n          </div>\n          \n          )\n       }\n      </div>\n\n    </div>}\n    {\n      !chooseTemplate && \n      <div className=\"api-back\">\n      <div className=\"api-details\">\n      <h1 className=\"api-heading\">SiteShet <br/> Convert your Google sheet into a Website</h1>\n      <div className=\"api-dis\">\n       \n        { !webUrl && <> <span className=\"api-dis-text\"> Make sure you have publised you google sheet to web ,then share your google sheet url.</span> \n   \n    \n   <TextField \n    label=\"Enter Url\"\n    variant=\"outlined\"\n    fullWidth\n    onChange={getUrl}\n    style={{\n      color: '#47ff8c',\n\n    }}\n    className={classes.textField}\n\n\n\n   >\n     </TextField>\n   <Button \n   style={{            \n    backgroundColor: \"#787c7a\",\n    color:\"#47ff8c\",     \n    borderColor: \"#787c7a\",\n    textDecoration: false,\n    marginLeft: '1%',\n  \n     \n\n}}\n   onClick={checkUrl} > <div className=\"api-button-text\">GO</div></Button>\n  </>\n}  <div>\n   <ToastContainer />\n\n  </div>\n  { webUrl &&<> \n    <span className=\"api-dis-text\"> This is your website url .</span> <br/>\n  <TextField    \n    variant=\"outlined\"\n    fullWidth\n    defaultValue={webUrl}\n    style={{\n      color: '#47ff8c',\n\n    }}\n    className={classes.textField1}\n\n\n\n   />\n  \n  <Button \n   style={{            \n    backgroundColor: \"#787c7a\",\n    color:\"#47ff8c\",     \n    borderColor: \"#787c7a\",\n    textDecoration: false,\n    marginLeft: '1%',\n  \n     \n\n}}\n   onClick={copyCodeToClipboard} > <div className=\"api-button-text\"> <FileCopyIcon /> </div></Button> \n \n <a href={webUrl} target=\"_blank\"  >\n  <Button \n   style={{            \n    backgroundColor: \"#787c7a\",\n    color:\"#47ff8c\",     \n    borderColor: \"#787c7a\",\n    textDecoration: false,\n    marginLeft: '1%',\n  \n     \n\n}}\n   > <div className=\"api-button-text\"> Visit </div></Button> </a>\n   </>}\n   </div>\n   \n    </div>\n\n    <img src={ApiImage}  className=\"api-image\"/>\n    </div>\n\n    }\n  </div>\n  );\n}\n\nexport default WebBulider;\n","/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/webBuilder/data.js",[],"/home/gaurav/Desktop/web/hashnode/n/sheetsite/src/pages/templates/connect/connect.js",["179","180","181","182","183","184","185","186","187","188"],"import React , {useState ,useEffect} from \"react\";\nimport Axios from 'axios';\nimport Loading from '../../../comp/loading/loading';\nimport  { Button }from '@material-ui/core';\n\n\nimport './connect.css';\nimport Coffe from '../../../assets/coffee.svg';\n\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\n\nimport {\n    BrowserRouter as Router,   \n    useParams\n  } from \"react-router-dom\";\n\n\nexport  default function Connect(){\n   \n    const clearText = (text) => {\n        var temp = text.length;\n       var newText = text.slice(8,temp);\n       return newText;\n    };\n    let { id } = useParams();\n    const [data,setData] = useState(null);\n\n    const fetchData = async () => {\n      try{\n          // console.log(id);\n       const {data} = await  Axios.get('https://spreadsheets.google.com/feeds/list/'+id +'/od6/public/basic?alt=json') ;\n       const details = data;\n       setData(details);\n                        \n       console.log(data);\n\n      } catch(error){\n           console.warn(error);\n      }\n      \n    };\n      useEffect(()=>{\n        fetchData();\n      }, [] );\n \n    if(!data)\n    {\n        return(\n    <>\n  <Loading color={'#0000'}/>\n\n    </>\n\n          \n        );\n    }else{\n     var userName = data[\"feed\"].entry[0][\"content\"]['$t'];\n     var userImage = data[\"feed\"].entry[1][\"content\"]['$t'];\n     var userEmail = data[\"feed\"].entry[2][\"content\"]['$t'];\n     var userTwitter = data[\"feed\"].entry[3][\"content\"][\"$t\"];\n     var userFacebook = data[\"feed\"].entry[4][\"content\"][\"$t\"];\n     var userLinkedIn = data[\"feed\"].entry[5][\"content\"][\"$t\"];\n     var userGithub = data[\"feed\"].entry[6][\"content\"][\"$t\"];\n     var userIG = data[\"feed\"].entry[7][\"content\"][\"$t\"];\n     var userYoutube = data[\"feed\"].entry[8][\"content\"][\"$t\"];\n\n\n\n\n\n    \n\n\n\n\n    return (\n      < >\n      <div className=\"connect-bg\"> \n        <img src={clearText(userImage)} className=\"connet-image\"/>\n        <h1>{clearText(userName)} </h1>\n        <h2>{clearText(userEmail)}</h2>\n\n\n        <div className=\"connect-social-icons\">\n        {clearText(userTwitter)  && <>  \n            <a href={clearText(userTwitter)}  target=\"_blank\" >\n       <Button className=\"connect-button-twitter connect-btn\">\n           <TwitterIcon/>\n          <span className=\"connect-button-text\"> Twitter  </span>\n\n         </Button>\n         </a>\n           </>}\n       {clearText(userFacebook) && <> \n        <a href={clearText(userFacebook)}  target=\"_blank\" >\n       <Button className=\"connect-button-Facebook connect-btn\">\n           <FacebookIcon/>\n           <span className=\"connect-button-text\">  Facebook </span>\n         </Button>\n         </a>\n       \n       </>  }\n       {clearText(userLinkedIn) && <> \n        <a href={clearText(userLinkedIn)}  target=\"_blank\" >\n       <Button className=\"connect-button-LinkedIn connect-btn\" >\n      <LinkedInIcon/>\n      <span className=\"connect-button-text\">    LinkedIn </span>\n       </Button>\n            </a> \n        </>}\n       {clearText(userGithub) && <> \n       <a href={clearText(userGithub)}  target=\"_blank\" >\n       <Button className=\"connect-button-Github connect-btn\">\n           \n           < GitHubIcon />   \n           <span className=\"connect-button-text\"> Github </span>\n           \n       </Button>\n            </a> \n            </>}\n            {clearText(userIG) && <> \n       <a href={clearText(userIG)}  target=\"_blank\" >\n       <Button className=\"connect-button-IG connect-btn\">\n           \n           < InstagramIcon/>   \n           <span className=\"connect-button-text\"> Instagram </span>\n           \n       </Button>\n            </a> \n            </>}\n            {clearText(userYoutube) && <> \n       <a href={clearText(userYoutube)}  target=\"_blank\" >\n       <Button className=\"connect-button-youtube connect-btn\">\n           \n           < YouTubeIcon/>   \n           <span className=\"connect-button-text\"> Youtube </span>\n           \n       </Button>\n            </a> \n            </>}\n\n\n\n          </div>\n         </div>\n      \n         </>\n    );\n    }\n};\n",{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":6,"column":3,"nodeType":"195","messageId":"196","endLine":6,"endColumn":7},{"ruleId":"193","severity":1,"message":"197","line":7,"column":3,"nodeType":"195","messageId":"196","endLine":7,"endColumn":12},{"ruleId":"193","severity":1,"message":"198","line":3,"column":20,"nodeType":"195","messageId":"196","endLine":3,"endColumn":26},{"ruleId":"193","severity":1,"message":"199","line":4,"column":3,"nodeType":"195","messageId":"196","endLine":4,"endColumn":9},{"ruleId":"193","severity":1,"message":"200","line":5,"column":3,"nodeType":"195","messageId":"196","endLine":5,"endColumn":8},{"ruleId":"193","severity":1,"message":"194","line":6,"column":3,"nodeType":"195","messageId":"196","endLine":6,"endColumn":7},{"ruleId":"193","severity":1,"message":"197","line":7,"column":3,"nodeType":"195","messageId":"196","endLine":7,"endColumn":12},{"ruleId":"193","severity":1,"message":"198","line":6,"column":22,"nodeType":"195","messageId":"196","endLine":6,"endColumn":28},{"ruleId":"201","severity":1,"message":"202","line":29,"column":10,"nodeType":"203","endLine":29,"endColumn":12,"suggestions":"204"},{"ruleId":"193","severity":1,"message":"205","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":20},{"ruleId":"193","severity":1,"message":"206","line":3,"column":23,"nodeType":"195","messageId":"196","endLine":3,"endColumn":26},{"ruleId":"193","severity":1,"message":"207","line":4,"column":22,"nodeType":"195","messageId":"196","endLine":4,"endColumn":26},{"ruleId":"208","severity":1,"message":"209","line":29,"column":7,"nodeType":"210","messageId":"211","endLine":29,"endColumn":16},{"ruleId":"212","severity":1,"message":"213","line":162,"column":5,"nodeType":"214","endLine":162,"endColumn":49},{"ruleId":"193","severity":1,"message":"215","line":4,"column":9,"nodeType":"195","messageId":"196","endLine":4,"endColumn":15},{"ruleId":"193","severity":1,"message":"216","line":4,"column":18,"nodeType":"195","messageId":"196","endLine":4,"endColumn":22},{"ruleId":"193","severity":1,"message":"198","line":15,"column":22,"nodeType":"195","messageId":"196","endLine":15,"endColumn":28},{"ruleId":"193","severity":1,"message":"199","line":16,"column":5,"nodeType":"195","messageId":"196","endLine":16,"endColumn":11},{"ruleId":"193","severity":1,"message":"200","line":17,"column":5,"nodeType":"195","messageId":"196","endLine":17,"endColumn":10},{"ruleId":"193","severity":1,"message":"194","line":18,"column":5,"nodeType":"195","messageId":"196","endLine":18,"endColumn":9},{"ruleId":"193","severity":1,"message":"217","line":43,"column":12,"nodeType":"195","messageId":"196","endLine":43,"endColumn":21},{"ruleId":"193","severity":1,"message":"218","line":43,"column":22,"nodeType":"195","messageId":"196","endLine":43,"endColumn":34},{"ruleId":"201","severity":1,"message":"202","line":61,"column":10,"nodeType":"203","endLine":61,"endColumn":12,"suggestions":"219"},{"ruleId":"193","severity":1,"message":"220","line":4,"column":8,"nodeType":"195","messageId":"196","endLine":4,"endColumn":19},{"ruleId":"193","severity":1,"message":"198","line":13,"column":22,"nodeType":"195","messageId":"196","endLine":13,"endColumn":28},{"ruleId":"193","severity":1,"message":"221","line":20,"column":12,"nodeType":"195","messageId":"196","endLine":20,"endColumn":21},{"ruleId":"193","severity":1,"message":"222","line":32,"column":11,"nodeType":"195","messageId":"196","endLine":32,"endColumn":20},{"ruleId":"193","severity":1,"message":"217","line":39,"column":12,"nodeType":"195","messageId":"196","endLine":39,"endColumn":21},{"ruleId":"193","severity":1,"message":"218","line":39,"column":22,"nodeType":"195","messageId":"196","endLine":39,"endColumn":34},{"ruleId":"201","severity":1,"message":"202","line":57,"column":10,"nodeType":"203","endLine":57,"endColumn":12,"suggestions":"223"},{"ruleId":"193","severity":1,"message":"224","line":71,"column":13,"nodeType":"195","messageId":"196","endLine":71,"endColumn":21},{"ruleId":"193","severity":1,"message":"198","line":16,"column":22,"nodeType":"195","messageId":"196","endLine":16,"endColumn":28},{"ruleId":"201","severity":1,"message":"202","line":50,"column":10,"nodeType":"203","endLine":50,"endColumn":12,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":68,"column":13,"nodeType":"195","messageId":"228","endLine":68,"endColumn":16},{"ruleId":"193","severity":1,"message":"220","line":4,"column":8,"nodeType":"195","messageId":"196","endLine":4,"endColumn":19},{"ruleId":"193","severity":1,"message":"198","line":20,"column":22,"nodeType":"195","messageId":"196","endLine":20,"endColumn":28},{"ruleId":"193","severity":1,"message":"229","line":23,"column":10,"nodeType":"195","messageId":"196","endLine":23,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":52,"column":10,"nodeType":"203","endLine":52,"endColumn":12,"suggestions":"230"},{"ruleId":"212","severity":1,"message":"213","line":119,"column":7,"nodeType":"214","endLine":119,"endColumn":73},{"ruleId":"189","replacedBy":"231"},{"ruleId":"191","replacedBy":"232"},{"ruleId":"193","severity":1,"message":"198","line":3,"column":20,"nodeType":"195","messageId":"196","endLine":3,"endColumn":26},{"ruleId":"193","severity":1,"message":"199","line":4,"column":3,"nodeType":"195","messageId":"196","endLine":4,"endColumn":9},{"ruleId":"193","severity":1,"message":"200","line":5,"column":3,"nodeType":"195","messageId":"196","endLine":5,"endColumn":8},{"ruleId":"193","severity":1,"message":"194","line":6,"column":3,"nodeType":"195","messageId":"196","endLine":6,"endColumn":7},{"ruleId":"193","severity":1,"message":"197","line":7,"column":3,"nodeType":"195","messageId":"196","endLine":7,"endColumn":12},{"ruleId":"233","severity":1,"message":"234","line":13,"column":16,"nodeType":"235","messageId":"211","endLine":13,"endColumn":18},{"ruleId":"212","severity":1,"message":"213","line":23,"column":9,"nodeType":"214","endLine":23,"endColumn":51},{"ruleId":"193","severity":1,"message":"236","line":2,"column":9,"nodeType":"195","messageId":"196","endLine":2,"endColumn":25},{"ruleId":"193","severity":1,"message":"205","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":20},{"ruleId":"193","severity":1,"message":"206","line":3,"column":23,"nodeType":"195","messageId":"196","endLine":3,"endColumn":26},{"ruleId":"193","severity":1,"message":"215","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":16},{"ruleId":"193","severity":1,"message":"194","line":9,"column":5,"nodeType":"195","messageId":"196","endLine":9,"endColumn":9},{"ruleId":"233","severity":1,"message":"234","line":13,"column":17,"nodeType":"235","messageId":"211","endLine":13,"endColumn":19},{"ruleId":"212","severity":1,"message":"213","line":18,"column":4,"nodeType":"214","endLine":18,"endColumn":49},{"ruleId":"193","severity":1,"message":"207","line":4,"column":22,"nodeType":"195","messageId":"196","endLine":4,"endColumn":26},{"ruleId":"208","severity":1,"message":"209","line":46,"column":7,"nodeType":"210","messageId":"211","endLine":46,"endColumn":16},{"ruleId":"208","severity":1,"message":"209","line":59,"column":5,"nodeType":"210","messageId":"211","endLine":59,"endColumn":14},{"ruleId":"212","severity":1,"message":"213","line":147,"column":8,"nodeType":"214","endLine":147,"endColumn":50},{"ruleId":"212","severity":1,"message":"213","line":163,"column":13,"nodeType":"214","endLine":163,"endColumn":75},{"ruleId":"237","severity":1,"message":"238","line":187,"column":12,"nodeType":"214","endLine":187,"endColumn":49},{"ruleId":"237","severity":1,"message":"238","line":284,"column":2,"nodeType":"214","endLine":284,"endColumn":37},{"ruleId":"212","severity":1,"message":"213","line":302,"column":5,"nodeType":"214","endLine":302,"endColumn":49},{"ruleId":"193","severity":1,"message":"239","line":8,"column":8,"nodeType":"195","messageId":"196","endLine":8,"endColumn":13},{"ruleId":"193","severity":1,"message":"198","line":19,"column":22,"nodeType":"195","messageId":"196","endLine":19,"endColumn":28},{"ruleId":"201","severity":1,"message":"202","line":50,"column":10,"nodeType":"203","endLine":50,"endColumn":12,"suggestions":"240"},{"ruleId":"212","severity":1,"message":"213","line":85,"column":9,"nodeType":"214","endLine":85,"endColumn":67},{"ruleId":"237","severity":1,"message":"238","line":92,"column":13,"nodeType":"214","endLine":92,"endColumn":64},{"ruleId":"237","severity":1,"message":"238","line":101,"column":9,"nodeType":"214","endLine":101,"endColumn":61},{"ruleId":"237","severity":1,"message":"238","line":110,"column":9,"nodeType":"214","endLine":110,"endColumn":61},{"ruleId":"237","severity":1,"message":"238","line":118,"column":8,"nodeType":"214","endLine":118,"endColumn":58},{"ruleId":"237","severity":1,"message":"238","line":128,"column":8,"nodeType":"214","endLine":128,"endColumn":54},{"ruleId":"237","severity":1,"message":"238","line":138,"column":8,"nodeType":"214","endLine":138,"endColumn":59},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["243"],"'makeStyles' is defined but never used.","'Box' is defined but never used.","'fade' is defined but never used.","no-dupe-keys","Duplicate key 'marginTop'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'Card' is defined but never used.","'sheetData' is assigned a value but never used.","'setSheetData' is assigned a value but never used.",["244"],"'ReactPlayer' is defined but never used.","'clearLink' is assigned a value but never used.","'clearText' is assigned a value but never used.",["245"],"'mainData' is assigned a value but never used.",["246"],"no-redeclare","'len' is already defined.","redeclared","'PhoneInTalk' is defined but never used.",["247"],["241"],["242"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'CircularProgress' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'Coffe' is defined but never used.",["248"],"no-global-assign","no-unsafe-negation",{"desc":"249","fix":"250"},{"desc":"249","fix":"251"},{"desc":"249","fix":"252"},{"desc":"249","fix":"253"},{"desc":"249","fix":"254"},{"desc":"249","fix":"255"},"Update the dependencies array to be: [fetchData]",{"range":"256","text":"257"},{"range":"258","text":"257"},{"range":"259","text":"257"},{"range":"260","text":"257"},{"range":"261","text":"257"},{"range":"262","text":"257"},[725,727],"[fetchData]",[1441,1443],[1302,1304],[1179,1181],[1517,1519],[1351,1353]]